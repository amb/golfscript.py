0 [] "" {} = false, everything else = true

integer, array, string, block >

       name   args meanings
          ~      1 bitwise not, dump, eval
          `      1 inspect
          !      1 logical not
          @      3 rotate
          #        comment
          $ 1 or 2 stack ith, sort(by)
          + coerce add, concat
          - coerce subtract, set diff
          *  order mult, block execute times, array repeat, join, fold
          /  order div, split, split in groups of size, unfold, each
          %  order mod, map, every ith element, clean split
          | coerce bitwise/setwise or
          & coerce bitwise/setwise and
          ^ coerce bitwise/setwise xor
        { }        blocks
          '        raw string
          "        escaped string
        [ ]        Array creation
          \      2 swap 2
          :     1* assignment
          ;      1 pop
          <  order less than, elements less than index
          >  order greater than, elements greater than or equal to index
          =  order equal to, element at index
          , 1 or 2 [*0...n], size, select
          .      1 dup
          ?  order pow, index, find
          (      1 deincrement, uncons
          )      1 increment, right uncons
 and or xor      2 
      print      1 
          p      1 
          n      0 
       puts      1 
       rand      1 
         do      1 
while until      2 
         if      3 
        abs      1 
        zip      1 
       base      2 